/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        homerowMod: homerowMod {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROWMOD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            flavor = "balanced";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        QWERTY {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE     &kp Q                &kp W                   &kp E                     &kp R                   &kp T                                 &kp Y                           &kp U               &kp I                 &kp O               &kp P                        &mo 4
&kp TAB        &homerowMod LCTRL A  &homerowMod LEFT_ALT S  &homerowMod LEFT_SHIFT D  &homerowMod LEFT_GUI F  &homerowMod LA(LS(LC(LEFT_GUI))) G    &homerowMod RC(RS(RA(RGUI))) H  &homerowMod RGUI J  &homerowMod RSHIFT K  &homerowMod RALT L  &homerowMod RCTRL SEMICOLON  &kp SQT
&kp BACKSLASH  &kp Z                &kp X                   &kp C                     &kp V                   &kp B                                 &kp N                           &kp M               &kp COMMA             &kp DOT             &kp FSLH                     &kp DEL
                                                            &kp SPACE                 &mo 3                   &kp LCTRL                             &kp RET                         &mo 1               &kp BACKSPACE
            >;
        };

        QWERTY_LOWER {
            bindings = <
&trans  &kp AT                &kp EQUAL              &kp MINUS         &kp SQT            &kp AMPERSAND    &kp K_MUTE  &kp C_VOL_DN  &kp C_VOL_UP   &kp C_PLAY_PAUSE  &kp C_PREV  &kp C_NEXT
&trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PERCENT      &kp LEFT    &kp DOWN      &kp UP         &kp RIGHT         &kp RIGHT   &trans
&trans  &trans                &trans                 &kp ASTERISK      &kp GRAVE          &trans           &trans      &trans        &kp C_BRI_DEC  &kp C_BRI_DEC     &trans      &trans
                                                     &trans            &mo 2              &trans           &trans      &trans        &trans
            >;
        };

        QWERTY_SHIFT {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp AMPERSAND  &kp PLUS      &kp UNDERSCORE  &kp DOUBLE_QUOTES  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp EXCL       &kp QUESTION  &kp LEFT_BRACE  &kp RIGHT_BRACE    &kp HASH    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans         &trans        &kp CARET       &kp TILDE          &trans      &trans  &trans  &trans  &trans  &trans  &trans
                                     &trans          &trans             &trans      &trans  &trans  &trans
            >;
        };

        NUMBERS_MISC {
            bindings = <
&trans  &trans           &trans           &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &trans    &trans  &kp N7        &kp N8        &kp N9        &trans  &trans
&trans  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &trans    &trans  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans  &trans
&trans  &trans           &trans           &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &trans    &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans
                                          &trans           &trans           &trans    &trans  &trans        &trans
            >;
        };

        OPTIONS {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB      &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&bootloader  &trans        &trans        &trans        &trans        &trans          &trans    &trans    &trans    &trans     &trans  &bootloader
                                         &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };
    };
};
